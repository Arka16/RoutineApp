{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/EditTable/EditTable.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport { useState } from \"react\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditTable(props) {\n  _s();\n  const location = useLocation();\n  const navigation = useNavigate();\n  const {\n    rows\n  } = location.state;\n  const [newRows, setNewRows] = useState(rows);\n  const [dtWarning, setDtWarning] = useState(false);\n  const [showFilledWarning, setShowFilledWarning] = useState(false);\n  const [createButtonClicked, setCreateButtonClicked] = useState(false);\n  const handleDeleteRow = index => {\n    if (newRows.length > 1) {\n      const updatedRows = [...newRows];\n      updatedRows.splice(index, 1);\n      setNewRows(updatedRows);\n    } else {\n      setDtWarning(true);\n    }\n  };\n  function closeFilledWarning() {\n    setShowFilledWarning(false);\n  }\n  function closeDeleteWarning() {\n    setDtWarning(false);\n  }\n  function handleCreateTable() {\n    setCreateButtonClicked(true);\n    var filled = true;\n    rows.forEach(item => {\n      if (!item.time || !item.task || !item.goal) {\n        setShowFilledWarning(true);\n        filled = false;\n      }\n    });\n    if (filled) {\n      navigation(\"/schedule\", {\n        state: {\n          rows: rows\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Edit Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      rows: newRows,\n      setRows: setNewRows,\n      handleDeleteRow: handleDeleteRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTable,\n      className: \"createTableButton\",\n      children: \" Create Time Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Warnings, {\n      showFilledWarning: showFilledWarning,\n      createButtonClicked: createButtonClicked,\n      closeFilledWarning: closeFilledWarning,\n      dtWarning: dtWarning,\n      closeDeleteWarning: closeDeleteWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTable, \"g2EzJ3rYJXzxvHq1hgHTiLTU3Sc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = EditTable;\nexport default EditTable;\nvar _c;\n$RefreshReg$(_c, \"EditTable\");","map":{"version":3,"names":["React","useNavigate","useLocation","TaskTable","useState","Warnings","jsxDEV","_jsxDEV","EditTable","props","_s","location","navigation","rows","state","newRows","setNewRows","dtWarning","setDtWarning","showFilledWarning","setShowFilledWarning","createButtonClicked","setCreateButtonClicked","handleDeleteRow","index","length","updatedRows","splice","closeFilledWarning","closeDeleteWarning","handleCreateTable","filled","forEach","item","time","task","goal","children","fileName","_jsxFileName","lineNumber","columnNumber","setRows","onClick","className","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/EditTable/EditTable.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation} from \"react-router-dom\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport { useState } from \"react\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nfunction EditTable(props){\n    const location = useLocation();\n    const navigation = useNavigate();\n    const {rows} = location.state\n    const [newRows, setNewRows] = useState(rows)\n    const [dtWarning, setDtWarning] = useState(false)\n    const [showFilledWarning, setShowFilledWarning] = useState(false)\n    const [createButtonClicked, setCreateButtonClicked] = useState(false)\n    const handleDeleteRow = (index) => {\n        if (newRows.length > 1){\n          const updatedRows = [...newRows];\n          updatedRows.splice(index, 1);\n          setNewRows(updatedRows);\n        }\n        else{\n          setDtWarning(true);\n        }\n        \n      };\n  \n      function closeFilledWarning(){\n        setShowFilledWarning(false)\n      }\n  \n      function closeDeleteWarning(){\n        setDtWarning(false)\n      }\n      function handleCreateTable(){\n        setCreateButtonClicked(true)\n         var filled = true;\n          rows.forEach((item) => {\n            if (!item.time || !item.task || !item.goal){\n              setShowFilledWarning(true)\n              filled = false\n            }\n          })\n          if(filled){\n            navigation(\"/schedule\",  {\n              state: {\n                rows: rows,\n              },\n            });\n          }\n          \n      }\n\n    return (\n    <div>\n    <h1> Edit Table </h1>\n    <TaskTable rows={newRows} setRows={setNewRows} handleDeleteRow = {handleDeleteRow} /> \n    <button onClick={handleCreateTable} className=\"createTableButton\"> Create Time Table </button> \n    <Warnings \n        showFilledWarning = {showFilledWarning}\n        createButtonClicked = {createButtonClicked}\n        closeFilledWarning = {closeFilledWarning}\n        dtWarning = {dtWarning}\n        closeDeleteWarning = {closeDeleteWarning}\n        />\n    </div>\n    \n    \n    \n    \n    \n    );\n   \n}\n\nexport default EditTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}