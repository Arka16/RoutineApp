{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTable() {\n  _s();\n  const initialRows = Array(5).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value\n    };\n    setRows(updatedRows);\n  };\n  const handleAddRow = () => {\n    setRows([...rows, {\n      time: '',\n      task: '',\n      goal: ''\n    }]);\n  };\n  const handleDeleteRow = index => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"task-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                value: row.time,\n                onChange: e => handleRowChange(index, 'time', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.task,\n                onChange: e => handleRowChange(index, 'task', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.goal,\n                onChange: e => handleRowChange(index, 'goal', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), rows.length > 5 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDeleteRow(rows.length - 1),\n      children: \"Delete Last Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"hSh7USprzuvyvELTKO2mfxdyizY=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskTable","_s","initialRows","Array","fill","time","task","goal","rows","setRows","handleRowChange","index","field","value","updatedRows","handleAddRow","handleDeleteRow","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","type","onChange","e","target","onClick","length","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\n\nfunction TaskTable() {\n  const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n\n  const [rows, setRows] = useState(initialRows);\n\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value,\n    };\n    setRows(updatedRows);\n  };\n\n  const handleAddRow = () => {\n    setRows([...rows, { time: '', task: '', goal: '' }]);\n  };\n\n  const handleDeleteRow = (index) => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n\n  return (\n    <div>\n\n      <div className=\"table-container\">\n        <table className=\"task-table\">\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>Task</th>\n              <th>Goal</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((row, index) => (\n              <tr key={index}>\n                <td>\n                  <input\n                    type=\"time\"\n                    value={row.time}\n                    onChange={(e) => handleRowChange(index, 'time', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.task}\n                    onChange={(e) => handleRowChange(index, 'task', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.goal}\n                    onChange={(e) => handleRowChange(index, 'goal', e.target.value)}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <button onClick={handleAddRow}>Add Row</button>\n      {rows.length > 5 && (\n        <button onClick={() => handleDeleteRow(rows.length - 1)}>Delete Last Row</button>\n      )}\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}