{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable() {\n  _s();\n  const URL = \"http://localhost:3000\";\n  const startingNum = 1;\n  const initialRows = Array(startingNum).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const [createButtonClicked, setCreateButtonClicked] = useState(false);\n  const [dtWarning, setDtWarning] = useState(false);\n  const navigation = useNavigate();\n  const location = useLocation();\n  const [showFilledWarning, setShowFilledWarning] = useState(false);\n  const handleDeleteRow = index => {\n    if (rows.length > 1) {\n      const updatedRows = [...rows];\n      updatedRows.splice(index, 1);\n      setRows(updatedRows);\n    } else {\n      setDtWarning(true);\n    }\n  };\n  function closeFilledWarning() {\n    setShowFilledWarning(false);\n  }\n  function closeDeleteWarning() {\n    setDtWarning(false);\n  }\n  async function handleCreateTable() {\n    setCreateButtonClicked(true);\n    var filled = true;\n    rows.forEach(item => {\n      if (!item.time || !item.task || !item.goal) {\n        setShowFilledWarning(true);\n        filled = false;\n      }\n    });\n    if (filled) {\n      // Make a POST request to your backend API\n      try {\n        console.log(\"LOCATION\");\n        console.log(location);\n        const {\n          _id\n        } = location.state;\n        console.log(_id);\n        const response = await axios.post(URL + \"/create-table\", {\n          _id,\n          rows\n        });\n        console.log(response.status);\n        console.log('Response from the server:', response.data);\n        navigation(\"/schedule\", {\n          state: {\n            rows: rows,\n            _id: 5\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Enter your Schedule Below \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      rows: rows,\n      setRows: setRows,\n      handleDeleteRow: handleDeleteRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTable,\n      className: \"createTableButton\",\n      children: \" Create Time Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Warnings, {\n      showFilledWarning: showFilledWarning,\n      createButtonClicked: createButtonClicked,\n      closeFilledWarning: closeFilledWarning,\n      dtWarning: dtWarning,\n      closeDeleteWarning: closeDeleteWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 13\n  }, this);\n}\n_s(CreateTable, \"0yUEFGsBvRfrVus13pz3Z8yQS4M=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","TaskTable","useNavigate","useLocation","Warnings","axios","jsxDEV","_jsxDEV","CreateTable","_s","URL","startingNum","initialRows","Array","fill","time","task","goal","rows","setRows","createButtonClicked","setCreateButtonClicked","dtWarning","setDtWarning","navigation","location","showFilledWarning","setShowFilledWarning","handleDeleteRow","index","length","updatedRows","splice","closeFilledWarning","closeDeleteWarning","handleCreateTable","filled","forEach","item","console","log","_id","state","response","post","status","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation} from \"react-router-dom\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nimport axios from 'axios';\n\n\n\nfunction CreateTable(){\n    const URL = \"http://localhost:3000\";\n    const startingNum = 1\n    const initialRows = Array(startingNum).fill({ time: '', task: '', goal: '' });\n    const [rows, setRows] = useState(initialRows);\n    const [createButtonClicked, setCreateButtonClicked] = useState(false)\n    const [dtWarning, setDtWarning] = useState(false)\n  \n    const navigation = useNavigate();\n    const location = useLocation();\n    const [showFilledWarning, setShowFilledWarning] = useState(false)\n    \n\n    const handleDeleteRow = (index) => {\n      if (rows.length > 1){\n        const updatedRows = [...rows];\n        updatedRows.splice(index, 1);\n        setRows(updatedRows);\n      }\n      else{\n        setDtWarning(true);\n      }\n      \n    };\n\n    function closeFilledWarning(){\n      setShowFilledWarning(false)\n    }\n\n    function closeDeleteWarning(){\n      setDtWarning(false)\n    }\n    async function handleCreateTable(){\n      setCreateButtonClicked(true)\n       var filled = true;\n        rows.forEach((item) => {\n          if (!item.time || !item.task || !item.goal){\n            setShowFilledWarning(true)\n            filled = false\n          }\n        })\n        if(filled){\n          // Make a POST request to your backend API\n          try{\n            console.log(\"LOCATION\")\n            console.log(location)\n            const {_id} = location.state\n            console.log(_id)\n            const response = await axios.post(URL + \"/create-table\", {_id, rows}); \n            console.log(response.status)\n            console.log('Response from the server:', response.data); \n            navigation(\"/schedule\",  {\n              state: {\n                rows: rows,\n                _id: 5\n              },\n            });\n\n          }\n          catch (error) {\n            console.error('Error:', error);\n          }\n         \n        }\n        \n    }\n    return (\n            <div>\n             <h1> Enter your Schedule Below </h1>\n             <TaskTable rows={rows} setRows={setRows} handleDeleteRow = {handleDeleteRow} /> \n            <button onClick={handleCreateTable} className=\"createTableButton\"> Create Time Table </button> \n            <Warnings \n             showFilledWarning = {showFilledWarning}\n             createButtonClicked = {createButtonClicked}\n             closeFilledWarning = {closeFilledWarning}\n             dtWarning = {dtWarning}\n             closeDeleteWarning = {closeDeleteWarning}\n             />\n            </div>\n            );\n}\n\nexport default CreateTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}