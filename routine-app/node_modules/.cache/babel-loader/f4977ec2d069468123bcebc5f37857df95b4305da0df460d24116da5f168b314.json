{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx\";\nimport React from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTable(props) {\n  // const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n\n  // const [rows, setRows] = useState(initialRows);\n  const rows = props.rows;\n  const setRows = props.setRows;\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value\n    };\n    setRows(updatedRows);\n  };\n  const handleAddRow = () => {\n    setRows([...rows, {\n      time: '',\n      startTime: '',\n      endTime: '',\n      task: '',\n      goal: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"task-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                placeholder: \"Start Time\",\n                value: row.startTime,\n                onChange: e => handleRowChange(index, 'startTime', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" - \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                placeholder: \"End Time\",\n                value: row.endTime,\n                onChange: e => handleRowChange(index, 'endTime', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.task,\n                placeholder: index === 0 ? 'Interview Prep' : \"\",\n                onChange: e => handleRowChange(index, 'task', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.goal,\n                placeholder: index === 0 ? 'Prepare the answers of 3 questions' : \"\",\n                onChange: e => handleRowChange(index, 'goal', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.handleDeleteRow(rows.length - 1),\n      children: \"Delete Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskTable","props","rows","setRows","handleRowChange","index","field","value","updatedRows","handleAddRow","time","startTime","endTime","task","goal","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","type","placeholder","onChange","e","target","onClick","handleDeleteRow","length","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx"],"sourcesContent":["import React from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nfunction TaskTable(props) {\n  // const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n\n  // const [rows, setRows] = useState(initialRows);\n  const rows = props.rows\n  const setRows = props.setRows\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value,\n    };\n    setRows(updatedRows);\n  };\n\n  const handleAddRow = () => {\n    setRows([...rows, { time: '', startTime: '', endTime: '', task: '', goal: '' }]);\n  };\n\n  \n\n  return (\n    <div>\n\n      <div className=\"table-container\">\n        <table className=\"task-table\">\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>Task</th>\n              <th>Goal</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((row, index) => (\n              <tr key={index}>\n                <td>\n                <input\n                  type=\"time\"\n                  placeholder='Start Time'\n                  value={row.startTime}\n                  onChange={(e) => handleRowChange(index, 'startTime', e.target.value)}\n                />\n                <span> - </span>\n                <input\n                  type=\"time\"\n                  placeholder='End Time'\n                  value={row.endTime}\n                  onChange={(e) => handleRowChange(index, 'endTime', e.target.value)}\n                />\n              </td>\n                \n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.task}\n                    placeholder= {index === 0 ? 'Interview Prep' : \"\"}\n                    onChange={(e) => handleRowChange(index, 'task', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.goal}\n                    placeholder= {index === 0 ? 'Prepare the answers of 3 questions' : \"\"}\n                    onChange={(e) => handleRowChange(index, 'goal', e.target.value)}\n                  />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <button onClick={handleAddRow}>Add Row</button>\n    \n      <button onClick={() => props.handleDeleteRow(rows.length - 1)}>Delete Row</button>\n      \n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC1B,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB;;EAEA;EACA,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAI;EACvB,MAAMC,OAAO,GAAGF,KAAK,CAACE,OAAO;EAC7B,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/C,MAAMC,WAAW,GAAG,CAAC,GAAGN,IAAI,CAAC;IAC7BM,WAAW,CAACH,KAAK,CAAC,GAAG;MACnB,GAAGG,WAAW,CAACH,KAAK,CAAC;MACrB,CAACC,KAAK,GAAGC;IACX,CAAC;IACDJ,OAAO,CAACK,WAAW,CAAC;EACtB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;MAAEQ,IAAI,EAAE,EAAE;MAAEC,SAAS,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EAClF,CAAC;EAID,oBACEf,OAAA;IAAAgB,QAAA,gBAEEhB,OAAA;MAAKiB,SAAS,EAAC,iBAAiB;MAAAD,QAAA,eAC9BhB,OAAA;QAAOiB,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC3BhB,OAAA;UAAAgB,QAAA,eACEhB,OAAA;YAAAgB,QAAA,gBACEhB,OAAA;cAAAgB,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbrB,OAAA;cAAAgB,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACbrB,OAAA;cAAAgB,QAAA,EAAI;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRrB,OAAA;UAAAgB,QAAA,EACGb,IAAI,CAACmB,GAAG,CAAC,CAACC,GAAG,EAAEjB,KAAK,kBACnBN,OAAA;YAAAgB,QAAA,gBACEhB,OAAA;cAAAgB,QAAA,gBACAhB,OAAA;gBACEwB,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,YAAY;gBACxBjB,KAAK,EAAEe,GAAG,CAACX,SAAU;gBACrBc,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAACC,KAAK,EAAE,WAAW,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtE,CAAC,eACFrB,OAAA;gBAAAgB,QAAA,EAAM;cAAG;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChBrB,OAAA;gBACEwB,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,UAAU;gBACtBjB,KAAK,EAAEe,GAAG,CAACV,OAAQ;gBACnBa,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAACC,KAAK,EAAE,SAAS,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eAEHrB,OAAA;cAAAgB,QAAA,eACEhB,OAAA;gBACEwB,IAAI,EAAC,MAAM;gBACXhB,KAAK,EAAEe,GAAG,CAACT,IAAK;gBAChBW,WAAW,EAAGnB,KAAK,KAAK,CAAC,GAAG,gBAAgB,GAAG,EAAG;gBAClDoB,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAACC,KAAK,EAAE,MAAM,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACLrB,OAAA;cAAAgB,QAAA,eACEhB,OAAA;gBACEwB,IAAI,EAAC,MAAM;gBACXhB,KAAK,EAAEe,GAAG,CAACR,IAAK;gBAChBU,WAAW,EAAGnB,KAAK,KAAK,CAAC,GAAG,oCAAoC,GAAG,EAAG;gBACtEoB,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAACC,KAAK,EAAE,MAAM,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;cAAE;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA,GAhCEf,KAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiCV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrB,OAAA;MAAQ6B,OAAO,EAAEnB,YAAa;MAAAM,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/CrB,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAM3B,KAAK,CAAC4B,eAAe,CAAC3B,IAAI,CAAC4B,MAAM,GAAG,CAAC,CAAE;MAAAf,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/E,CAAC;AAEV;AAACW,EAAA,GA/EQ/B,SAAS;AAiFlB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}