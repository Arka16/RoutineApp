{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable() {\n  _s();\n  const initialRows = Array(5).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  console.log(\"Row is: \");\n  console.log(rows);\n  const navigation = useNavigate();\n  const [showFilledWarning, setShowFilledWarning] = useState(false);\n  function handleCreateTable() {\n    rows.forEach(item => {\n      if (!item.time || !item.task || !item.goal) {\n        setShowFilledWarning(true);\n      }\n    });\n    if (!showFilledWarning) {\n      navigation(\"/schedule\", {\n        state: {\n          rows\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Enter your Schedule Below \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      rows: rows,\n      setRows: setRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTable,\n      className: \"createTableButton\",\n      children: \" Create Time Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), showFilledWarning && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" All entries on table must be filled! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this);\n}\n_s(CreateTable, \"wEPhf6SALriSrI3cC+i0MBxjiKY=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","TaskTable","useNavigate","jsxDEV","_jsxDEV","CreateTable","_s","initialRows","Array","fill","time","task","goal","rows","setRows","console","log","navigation","showFilledWarning","setShowFilledWarning","handleCreateTable","forEach","item","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CreateTable(){\n    const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n    const [rows, setRows] = useState(initialRows);\n    console.log(\"Row is: \")\n    console.log(rows)\n    const navigation = useNavigate();\n    const [showFilledWarning, setShowFilledWarning] = useState(false)\n    function handleCreateTable(){\n       \n        rows.forEach((item) => {\n          if (!item.time || !item.task || !item.goal){\n            setShowFilledWarning(true)\n          }\n        })\n        if(!showFilledWarning){\n          navigation(\"/schedule\",  {\n            state: {\n              rows\n            },\n          });\n        }\n        \n    }\n    return (\n            <div>\n             <h1> Enter your Schedule Below </h1>\n             <TaskTable rows={rows} setRows={setRows} /> \n            <button onClick={handleCreateTable} className=\"createTableButton\"> Create Time Table </button> \n            {showFilledWarning && <p> All entries on table must be filled! </p>}\n            </div>\n            );\n}\n\nexport default CreateTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAE;EAAAC,EAAA;EAClB,MAAMC,WAAW,GAAGC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACnE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACO,WAAW,CAAC;EAC7CQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACvBD,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,MAAMI,UAAU,GAAGf,WAAW,CAAC,CAAC;EAChC,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjE,SAASoB,iBAAiBA,CAAA,EAAE;IAExBP,IAAI,CAACQ,OAAO,CAAEC,IAAI,IAAK;MACrB,IAAI,CAACA,IAAI,CAACZ,IAAI,IAAI,CAACY,IAAI,CAACX,IAAI,IAAI,CAACW,IAAI,CAACV,IAAI,EAAC;QACzCO,oBAAoB,CAAC,IAAI,CAAC;MAC5B;IACF,CAAC,CAAC;IACF,IAAG,CAACD,iBAAiB,EAAC;MACpBD,UAAU,CAAC,WAAW,EAAG;QACvBM,KAAK,EAAE;UACLV;QACF;MACF,CAAC,CAAC;IACJ;EAEJ;EACA,oBACQT,OAAA;IAAAoB,QAAA,gBACCpB,OAAA;MAAAoB,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCxB,OAAA,CAACH,SAAS;MAACY,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CxB,OAAA;MAAQyB,OAAO,EAAET,iBAAkB;MAACU,SAAS,EAAC,mBAAmB;MAAAN,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7FV,iBAAiB,iBAAId,OAAA;MAAAoB,QAAA,EAAG;IAAsC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAElB;AAACtB,EAAA,CA/BQD,WAAW;EAAA,QAKGH,WAAW;AAAA;AAAA6B,EAAA,GALzB1B,WAAW;AAiCpB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}