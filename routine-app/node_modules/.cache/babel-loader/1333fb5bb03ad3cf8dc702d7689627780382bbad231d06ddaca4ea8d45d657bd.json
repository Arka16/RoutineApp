{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/Timer/Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Timer.css\";\nimport TimerOptions from \"../TimerOptions/TimerOptions\";\nimport alarmSound from \"../../assets/sounds/mixkit-classic-short-alarm-993.wav\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer({\n  username,\n  setCloseTimer\n}) {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(5);\n  const [play, setPlay] = useState(false);\n  const [breaks, setBreaks] = useState(false);\n  const [heading, setHeading] = useState(\"Work\");\n  const [showOptions, setShowOptions] = useState(false);\n  const [workDuration, setWorkDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [started, setStarted] = useState(false);\n  const [selectedWorkOption, setSelectedWorkOption] = useState(3);\n  const [selectedBreakOption, setSelectedBreakOption] = useState(1);\n  const alarmAudio = new Audio(alarmSound);\n  const URL = \"http://localhost:3000\";\n  // Fetch initial timer data from the server when the component mounts\n  useEffect(() => {\n    axios.get(URL + \"/timer/\" + username).then(response => {\n      const {\n        minutes,\n        seconds,\n        timerState,\n        breaks,\n        heading\n      } = response.data;\n      setMinutes(minutes);\n      setSeconds(seconds);\n      setPlay(timerState);\n      setBreaks(breaks);\n      setHeading(heading);\n    }).catch(error => {\n      console.error('Error fetching timer data:', error);\n    });\n  }, [username]);\n  useEffect(() => {\n    axios.get(URL + \"/timer/options/\" + username).then(response => {\n      const {\n        selectedWorkOption,\n        selectedBreakOption\n      } = response.data;\n      setSelectedWorkOption(selectedWorkOption);\n      setSelectedBreakOption(selectedBreakOption);\n    }).catch(error => {\n      console.log(\"error fetching data from options: \", error);\n    });\n  }, [selectedBreakOption, selectedWorkOption]);\n  // Update timer data on the server when play/pause is toggled\n  useEffect(() => {\n    let timer;\n    if (play) {\n      setStarted(true);\n      if (minutes === 0 && seconds === 0) {\n        if (started) {\n          alarmAudio.play();\n        }\n        setStarted(false);\n        if (!breaks) {\n          setMinutes(breakDuration);\n          setHeading(\"Break\");\n        } else {\n          setMinutes(workDuration);\n          setHeading(\"Work\");\n        }\n        setPlay(false);\n        setBreaks(!breaks);\n      } else if (seconds === 0) {\n        setSeconds(59);\n        setMinutes(prev => prev - 1);\n      } else {\n        // Update timer on the server every second\n        timer = setTimeout(() => {\n          setSeconds(prev => prev - 1);\n\n          // Send a POST request to update the timer on the server\n          axios.post(URL + '/timer/' + username, {\n            minutes,\n            seconds: seconds - 1,\n            timerState: play,\n            breaks,\n            heading\n          })\n          // .then(response => {\n          //   const { minutes, seconds, timerState, breaks, heading } = response.data;\n          //   setMinutes(minutes);\n          //   setSeconds(seconds);\n          //   setPlay(timerState);\n          //   setBreaks(breaks);\n          //   setHeading(heading);\n          // })\n          .catch(error => {\n            console.error('Error updating timer data:', error);\n          });\n        }, 1000);\n      }\n    }\n    // Clear the timer when the component unmounts or play is toggled off\n    return () => clearTimeout(timer);\n  }, [play, minutes, seconds, breaks, heading, workDuration, breakDuration, username]);\n  const handlePlayPause = () => {\n    setPlay(prevPlay => !prevPlay);\n  };\n  const handleOptionsClick = () => {\n    setShowOptions(!showOptions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"options-button\",\n        onClick: handleOptionsClick,\n        children: \"\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-options-container\",\n        children: showOptions && /*#__PURE__*/_jsxDEV(TimerOptions, {\n          onClose: () => setShowOptions(false),\n          play: play,\n          setMinutes: setMinutes,\n          setSeconds: setSeconds,\n          setWorkDuration: setWorkDuration,\n          setBreakDuration: setBreakDuration,\n          breaks: breaks,\n          started: started,\n          setShowOptions: setShowOptions,\n          setPlay: setPlay,\n          setStarted: setStarted,\n          workDuration: workDuration,\n          breakDuration: breakDuration,\n          selectedWorkOption: selectedWorkOption,\n          setSelectedWorkOption: setSelectedWorkOption,\n          selectedBreakOption: selectedBreakOption,\n          setSelectedBreakOption: setSelectedBreakOption,\n          setCloseTimer: setCloseTimer,\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", heading]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"timer-text\",\n        children: [minutes < 10 ? `0${minutes}` : minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-pause-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-pause-button\",\n        onClick: handlePlayPause,\n        children: play ? \"⏸️\" : \"▶️\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"6jAsyOdBs5cYoUCsRswFZyvmP9A=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","TimerOptions","alarmSound","axios","jsxDEV","_jsxDEV","Timer","username","setCloseTimer","_s","minutes","setMinutes","seconds","setSeconds","play","setPlay","breaks","setBreaks","heading","setHeading","showOptions","setShowOptions","workDuration","setWorkDuration","breakDuration","setBreakDuration","started","setStarted","selectedWorkOption","setSelectedWorkOption","selectedBreakOption","setSelectedBreakOption","alarmAudio","Audio","URL","get","then","response","timerState","data","catch","error","console","log","timer","prev","setTimeout","post","clearTimeout","handlePlayPause","prevPlay","handleOptionsClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Timer.css\";\nimport TimerOptions from \"../TimerOptions/TimerOptions\";\nimport alarmSound from \"../../assets/sounds/mixkit-classic-short-alarm-993.wav\";\nimport axios from \"axios\";\n\nfunction Timer({ username, setCloseTimer }) {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(5);\n  const [play, setPlay] = useState(false);\n  const [breaks, setBreaks] = useState(false);\n  const [heading, setHeading] = useState(\"Work\");\n  const [showOptions, setShowOptions] = useState(false);\n  \n  const [workDuration, setWorkDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [started, setStarted] = useState(false);\n  const [selectedWorkOption, setSelectedWorkOption] = useState(3); \n  const [selectedBreakOption, setSelectedBreakOption] = useState(1); \n  const alarmAudio = new Audio(alarmSound);\n  const URL = \"http://localhost:3000\"\n  // Fetch initial timer data from the server when the component mounts\n  useEffect(() => {\n    axios.get(URL + \"/timer/\" + username)\n      .then(response => {\n        const { minutes, seconds, timerState, breaks, heading } = response.data;\n        setMinutes(minutes);\n        setSeconds(seconds);\n        setPlay(timerState);\n        setBreaks(breaks);\n        setHeading(heading);\n      })\n      .catch(error => {\n        console.error('Error fetching timer data:', error);\n      });\n  }, [username]);\n  useEffect(()=>{\n    axios.get(URL + \"/timer/options/\" + username)\n    .then(response => {\n      const {selectedWorkOption, selectedBreakOption} = response.data;\n      setSelectedWorkOption(selectedWorkOption)\n      setSelectedBreakOption(selectedBreakOption)\n    })\n    .catch(error =>{\n      console.log(\"error fetching data from options: \", error)\n    })\n  }, [selectedBreakOption, selectedWorkOption])\n  // Update timer data on the server when play/pause is toggled\n  useEffect(() => {\n    let timer;\n    if (play) {\n      setStarted(true)\n      if (minutes === 0 && seconds === 0) {\n        if(started){\n          alarmAudio.play();\n        } \n        setStarted(false)\n        if (!breaks) {\n          setMinutes(breakDuration);\n          setHeading(\"Break\");\n        } else {\n          setMinutes(workDuration);\n          setHeading(\"Work\");\n        }\n\n        setPlay(false);\n        setBreaks(!breaks);\n        \n      } else if (seconds === 0) {\n        setSeconds(59);\n        setMinutes((prev) => prev - 1);\n      } else {\n        // Update timer on the server every second\n        timer = setTimeout(() => {\n          setSeconds((prev) => prev - 1);\n\n          // Send a POST request to update the timer on the server\n          axios.post(URL + '/timer/' + username, {\n            minutes,\n            seconds: seconds - 1,\n            timerState: play,\n            breaks,\n            heading\n          })\n            // .then(response => {\n            //   const { minutes, seconds, timerState, breaks, heading } = response.data;\n            //   setMinutes(minutes);\n            //   setSeconds(seconds);\n            //   setPlay(timerState);\n            //   setBreaks(breaks);\n            //   setHeading(heading);\n            // })\n            .catch(error => {\n              console.error('Error updating timer data:', error);\n            });\n        }, 1000);\n      }\n    }\n    // Clear the timer when the component unmounts or play is toggled off\n    return () => clearTimeout(timer);\n  }, [play, minutes, seconds, breaks, heading, workDuration, breakDuration, username]);\n\n  const handlePlayPause = () => {\n    setPlay((prevPlay) => !prevPlay);\n  };\n\n  const handleOptionsClick = () => {\n    setShowOptions(!showOptions);\n  };\n\n  return (\n    <div className=\"timer-container\">\n      <div className=\"options-container\">\n        <button className=\"options-button\" onClick={handleOptionsClick}>\n          ⋮\n        </button>\n        <div className=\"timer-options-container\">\n          {showOptions && <TimerOptions\n            onClose={() => setShowOptions(false)}\n            play={play}\n            setMinutes={setMinutes}\n            setSeconds={setSeconds}\n            setWorkDuration={setWorkDuration}\n            setBreakDuration={setBreakDuration}\n            breaks={breaks}\n            started={started}\n            setShowOptions={setShowOptions}\n            setPlay = {setPlay}\n            setStarted = {setStarted}\n            workDuration={workDuration}\n            breakDuration={breakDuration}\n            selectedWorkOption={selectedWorkOption}\n            setSelectedWorkOption={setSelectedWorkOption}\n            selectedBreakOption = {selectedBreakOption}\n            setSelectedBreakOption = {setSelectedBreakOption}\n            setCloseTimer = {setCloseTimer}\n            username = {username}\n          />}\n        </div>\n      </div>\n      <div className=\"header-container\">\n        <h4> {heading}</h4>\n        <h2 className=\"timer-text\">\n          {minutes < 10 ? `0${minutes}` : minutes}:\n          {seconds < 10 ? `0${seconds}` : seconds}\n        </h2>\n      </div>\n      <div className=\"play-pause-container\">\n        <button className=\"play-pause-button\" onClick={handlePlayPause}>\n          {play ? \"⏸️\" : \"▶️\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}