{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable() {\n  _s();\n  const initialRows = Array(5).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const [createButtonClicked, setCreateButtonClicked] = useState(false);\n  const [dtWarning, setDtwWarning] = useState(false);\n  console.log(\"Row is: \");\n  console.log(rows);\n  const navigation = useNavigate();\n  const [showFilledWarning, setShowFilledWarning] = useState(false);\n  const handleDeleteRow = index => {\n    if (rows.length > 1) {\n      const updatedRows = [...rows];\n      updatedRows.splice(index, 1);\n      setRows(updatedRows);\n    } else {\n      setDtwWarning(true);\n    }\n  };\n  function closeWarning() {\n    setShowFilledWarning(false);\n  }\n  function handleCreateTable() {\n    setCreateButtonClicked(true);\n    var filled = true;\n    rows.forEach(item => {\n      if (!item.time || !item.task || !item.goal) {\n        setShowFilledWarning(true);\n        filled = false;\n      }\n    });\n    if (filled) {\n      navigation(\"/schedule\", {\n        state: {\n          rows\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Enter your Schedule Below \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      rows: rows,\n      setRows: setRows,\n      handleDeleteRow: handleDeleteRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTable,\n      className: \"createTableButton\",\n      children: \" Create Time Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), showFilledWarning && createButtonClicked && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"warning\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeWarning,\n        className: \"warning-button\",\n        children: \" close \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warningText\",\n        children: \" Warning: All entries on table must be filled! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this), dtWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeWarning,\n        className: \"warning-button\",\n        children: \" close \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"warningText\",\n        children: \" Warning: Table must have one row! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n}\n_s(CreateTable, \"WYtLZuBuVikp5gQe8IBnCkk9l0o=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","TaskTable","useNavigate","jsxDEV","_jsxDEV","CreateTable","_s","initialRows","Array","fill","time","task","goal","rows","setRows","createButtonClicked","setCreateButtonClicked","dtWarning","setDtwWarning","console","log","navigation","showFilledWarning","setShowFilledWarning","handleDeleteRow","index","length","updatedRows","splice","closeWarning","handleCreateTable","filled","forEach","item","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CreateTable(){\n    const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n    const [rows, setRows] = useState(initialRows);\n    const [createButtonClicked, setCreateButtonClicked] = useState(false)\n    const [dtWarning, setDtwWarning] = useState(false)\n    console.log(\"Row is: \")\n    console.log(rows)\n    const navigation = useNavigate();\n    const [showFilledWarning, setShowFilledWarning] = useState(false)\n    \n\n    const handleDeleteRow = (index) => {\n      if (rows.length > 1){\n        const updatedRows = [...rows];\n        updatedRows.splice(index, 1);\n        setRows(updatedRows);\n      }\n      else{\n        setDtwWarning(true);\n      }\n      \n    };\n\n    function closeWarning(){\n      setShowFilledWarning(false)\n    }\n    function handleCreateTable(){\n      setCreateButtonClicked(true)\n       var filled = true;\n        rows.forEach((item) => {\n          if (!item.time || !item.task || !item.goal){\n            setShowFilledWarning(true)\n            filled = false\n          }\n        })\n        if(filled){\n          navigation(\"/schedule\",  {\n            state: {\n              rows\n            },\n          });\n        }\n        \n    }\n    return (\n            <div>\n             <h1> Enter your Schedule Below </h1>\n             <TaskTable rows={rows} setRows={setRows} handleDeleteRow = {handleDeleteRow} /> \n            <button onClick={handleCreateTable} className=\"createTableButton\"> Create Time Table </button> \n            {showFilledWarning && createButtonClicked &&\n             <div className=\"warning\">\n              <button onClick={closeWarning} className= \"warning-button\"> close </button>\n              <p className=\"warningText\"> Warning: All entries on table must be filled! </p>\n              </div>}\n              {dtWarning && \n              <div>\n              <button onClick={closeWarning} className= \"warning-button\"> close </button>\n              <p className=\"warningText\"> Warning: Table must have one row! </p>\n              </div>\n              }\n            </div>\n            );\n}\n\nexport default CreateTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}