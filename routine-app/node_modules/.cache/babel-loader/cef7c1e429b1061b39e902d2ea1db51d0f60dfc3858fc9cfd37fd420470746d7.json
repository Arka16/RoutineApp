{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/Timer/Timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(5);\n  const [play, setPlay] = useState(false);\n  const [breaks, setBreaks] = useState(false);\n  const [heading, setHeading] = useState(\"Work\");\n  const [showOptions, setShowOptions] = useState(false);\n  const handlePlayPause = () => {\n    setPlay(!play);\n  };\n  const handleOptionsClick = () => {\n    setShowOptions(!showOptions);\n  };\n  useEffect(() => {\n    let timer;\n    if (play) {\n      if (minutes === 0 && seconds === 0) {\n        if (!breaks) {\n          setMinutes(5);\n          setHeading(\"Break\");\n        } else {\n          setMinutes(45);\n          setHeading(\"Work\");\n        }\n        setPlay(false);\n        setBreaks(!breaks);\n      } else if (seconds === 0) {\n        setSeconds(59);\n        setMinutes(prev => prev - 1);\n      } else {\n        timer = setTimeout(() => setSeconds(prev => prev - 1), 1000);\n      }\n    }\n    // Clear the timer when the component unmounts or play is toggled off\n    return () => clearTimeout(timer);\n  }, [play, minutes, seconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"timer-text\",\n        children: [heading, \": \", minutes < 10 ? `0${minutes}` : minutes, \":\", seconds < 10 ? `0${seconds}` : seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"options-button\",\n        onClick: handleOptionsClick,\n        children: \"\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-pause-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"play-pause-button\",\n        onClick: handlePlayPause,\n        children: play ? \"⏸️\" : \"▶️\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"X431Cwf6efOizQPMl7zDSCgGVlQ=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Timer","_s","minutes","setMinutes","seconds","setSeconds","play","setPlay","breaks","setBreaks","heading","setHeading","showOptions","setShowOptions","handlePlayPause","handleOptionsClick","timer","prev","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/Timer/Timer.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Timer.css\";\n\nfunction Timer() {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(5);\n  const [play, setPlay] = useState(false);\n  const [breaks, setBreaks] = useState(false);\n  const [heading, setHeading] = useState(\"Work\");\n  const [showOptions, setShowOptions] = useState(false);\n\n  const handlePlayPause = () => {\n    setPlay(!play);\n  };\n\n  const handleOptionsClick = () => {\n    setShowOptions(!showOptions);\n  };\n\n  useEffect(() => {\n    let timer;\n    if (play) {\n      if (minutes === 0 && seconds === 0) {\n        if (!breaks) {\n          setMinutes(5);\n          setHeading(\"Break\");\n        } else {\n          setMinutes(45);\n          setHeading(\"Work\");\n        }\n\n        setPlay(false);\n        setBreaks(!breaks);\n      } else if (seconds === 0) {\n        setSeconds(59);\n        setMinutes((prev) => prev - 1);\n      } else {\n        timer = setTimeout(() => setSeconds((prev) => prev - 1), 1000);\n      }\n    }\n    // Clear the timer when the component unmounts or play is toggled off\n    return () => clearTimeout(timer);\n  }, [play, minutes, seconds]);\n\n  return (\n    <div className=\"timer-container\">\n      <div className=\"header-container\">\n        <h2 className=\"timer-text\">\n          {heading}: {minutes < 10 ? `0${minutes}` : minutes}:\n          {seconds < 10 ? `0${seconds}` : seconds}\n        </h2>\n      </div>\n      <div className=\"options-container\">\n        <button className=\"options-button\" onClick={handleOptionsClick}>\n          ⋮\n        </button>\n      </div>\n      <div className=\"play-pause-container\">\n        <button className=\"play-pause-button\" onClick={handlePlayPause}>\n          {play ? \"⏸️\" : \"▶️\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}