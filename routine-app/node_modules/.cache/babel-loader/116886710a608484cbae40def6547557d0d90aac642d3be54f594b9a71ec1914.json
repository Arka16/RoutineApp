{"ast":null,"code":"import axios from \"axios\";\nfunction startsBefore(time1, time2) {\n  const timeParts1 = time1.split(':');\n  const timeParts2 = time2.split(':');\n  const hour1 = parseInt(timeParts1[0]);\n  const hour2 = parseInt(timeParts2[0]);\n  if (hour1 === hour2) {\n    const minute1 = parseInt(timeParts1[1]);\n    const minute2 = parseInt(timeParts2[1]);\n    return minute1 < minute2;\n  }\n  return hour1 < hour2;\n}\nfunction isValidPhoneNumber(phoneNumber) {\n  // Regular expression for a valid US phone number (10 digits, optional dashes)\n  const phoneRegex = /^\\d{10}$|^\\d{3}-\\d{3}-\\d{4}$/;\n  return phoneRegex.test(phoneNumber);\n}\nfunction isValidEmail(email) {\n  // Regular expression for a valid email address\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  return emailRegex.test(email);\n}\nfunction isCurrentTimeBetween(startHour, startMinute, endHour, endMinute) {\n  const currentDate = new Date();\n  const currentHour = currentDate.getHours();\n  const currentMinute = currentDate.getMinutes();\n  const startTimeInMinutes = startHour * 60 + startMinute;\n  const endTimeInMinutes = endHour * 60 + endMinute;\n  const currentTimeInMinutes = currentHour * 60 + currentMinute;\n  return currentTimeInMinutes >= startTimeInMinutes && currentTimeInMinutes <= endTimeInMinutes;\n}\nasync function sendReminder(isPlay, index, username) {\n  if (isPlay) {\n    axios.post;\n  }\n}\nmodule.exports = {\n  startsBefore,\n  isValidPhoneNumber,\n  isValidEmail\n};","map":{"version":3,"names":["axios","startsBefore","time1","time2","timeParts1","split","timeParts2","hour1","parseInt","hour2","minute1","minute2","isValidPhoneNumber","phoneNumber","phoneRegex","test","isValidEmail","email","emailRegex","isCurrentTimeBetween","startHour","startMinute","endHour","endMinute","currentDate","Date","currentHour","getHours","currentMinute","getMinutes","startTimeInMinutes","endTimeInMinutes","currentTimeInMinutes","sendReminder","isPlay","index","username","post","module","exports"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/helper_functions/helper_functions.js"],"sourcesContent":["import axios from \"axios\";\nfunction startsBefore(time1, time2) {\n    const timeParts1 = time1.split(':');\n    const timeParts2 = time2.split(':');\n    const hour1 = parseInt(timeParts1[0]);\n    const hour2 = parseInt(timeParts2[0]);\n    \n    if (hour1 === hour2) {\n        const minute1 = parseInt(timeParts1[1]);\n        const minute2 = parseInt(timeParts2[1]);\n        return minute1 < minute2;\n    }\n    \n    return hour1 < hour2;\n}\n\nfunction isValidPhoneNumber(phoneNumber) {\n    // Regular expression for a valid US phone number (10 digits, optional dashes)\n    const phoneRegex = /^\\d{10}$|^\\d{3}-\\d{3}-\\d{4}$/;\n    return phoneRegex.test(phoneNumber);\n  }\n\nfunction isValidEmail(email) {\n    // Regular expression for a valid email address\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailRegex.test(email);\n  }\n\n  function isCurrentTimeBetween(startHour, startMinute, endHour, endMinute) {\n    const currentDate = new Date();\n    const currentHour = currentDate.getHours();\n    const currentMinute = currentDate.getMinutes();\n  \n    const startTimeInMinutes = startHour * 60 + startMinute;\n    const endTimeInMinutes = endHour * 60 + endMinute;\n    const currentTimeInMinutes = currentHour * 60 + currentMinute;\n  \n    return currentTimeInMinutes >= startTimeInMinutes && currentTimeInMinutes <= endTimeInMinutes;\n  }\n\n  async function sendReminder(isPlay, index, username){\n    if(isPlay){\n      axios.post\n    }\n\n  }\n  \n\nmodule.exports = { startsBefore, isValidPhoneNumber, isValidEmail };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAYA,CAACC,KAAK,EAAEC,KAAK,EAAE;EAChC,MAAMC,UAAU,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;EACnC,MAAMC,UAAU,GAAGH,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,MAAME,KAAK,GAAGC,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;EACrC,MAAMK,KAAK,GAAGD,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;EAErC,IAAIC,KAAK,KAAKE,KAAK,EAAE;IACjB,MAAMC,OAAO,GAAGF,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;IACvC,MAAMO,OAAO,GAAGH,QAAQ,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;IACvC,OAAOI,OAAO,GAAGC,OAAO;EAC5B;EAEA,OAAOJ,KAAK,GAAGE,KAAK;AACxB;AAEA,SAASG,kBAAkBA,CAACC,WAAW,EAAE;EACrC;EACA,MAAMC,UAAU,GAAG,8BAA8B;EACjD,OAAOA,UAAU,CAACC,IAAI,CAACF,WAAW,CAAC;AACrC;AAEF,SAASG,YAAYA,CAACC,KAAK,EAAE;EACzB;EACA,MAAMC,UAAU,GAAG,iDAAiD;EACpE,OAAOA,UAAU,CAACH,IAAI,CAACE,KAAK,CAAC;AAC/B;AAEA,SAASE,oBAAoBA,CAACC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,SAAS,EAAE;EACxE,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC;EAC1C,MAAMC,aAAa,GAAGJ,WAAW,CAACK,UAAU,CAAC,CAAC;EAE9C,MAAMC,kBAAkB,GAAGV,SAAS,GAAG,EAAE,GAAGC,WAAW;EACvD,MAAMU,gBAAgB,GAAGT,OAAO,GAAG,EAAE,GAAGC,SAAS;EACjD,MAAMS,oBAAoB,GAAGN,WAAW,GAAG,EAAE,GAAGE,aAAa;EAE7D,OAAOI,oBAAoB,IAAIF,kBAAkB,IAAIE,oBAAoB,IAAID,gBAAgB;AAC/F;AAEA,eAAeE,YAAYA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAC;EAClD,IAAGF,MAAM,EAAC;IACRlC,KAAK,CAACqC,IAAI;EACZ;AAEF;AAGFC,MAAM,CAACC,OAAO,GAAG;EAAEtC,YAAY;EAAEW,kBAAkB;EAAEI;AAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}