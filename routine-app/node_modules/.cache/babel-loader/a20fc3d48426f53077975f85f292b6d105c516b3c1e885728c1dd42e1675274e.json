{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/SchedulePage/SchedulePage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function SchedulePage() {\n  _s();\n  const location = useLocation();\n  const navigation = useNavigate();\n  const {\n    rows,\n    id\n  } = location.state;\n  console.log(\"ID IS\" + id);\n  const URL = \"http://localhost:3000\";\n  const data = await axios.get(URL + \"/get-data/\" + id);\n  console.log(data);\n  function handleEditTable() {\n    navigation(\"/edit\", {\n      state: {\n        rows,\n        id\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rows.map((row, index) => {\n          const timeParts = row.time.split(':');\n          const hour = parseInt(timeParts[0]);\n          const minute = parseInt(timeParts[1]);\n\n          // Format the time in 12-hour format\n          let ampm = 'am';\n          let formattedHour = hour;\n          if (hour >= 12) {\n            ampm = 'pm';\n            if (hour > 12) {\n              formattedHour = hour - 12;\n            }\n          }\n\n          // Handle midnight (00:00)\n          if (hour === 0) {\n            formattedHour = 12;\n          }\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [formattedHour, \":\", minute.toString().padStart(2, '0'), \" \", ampm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.goal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditTable,\n      className: \"editTableButton\",\n      children: \" Edit Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(SchedulePage, \"7tujdAP/wfsjo133z0jQjluUhSk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SchedulePage;\nexport default SchedulePage;\nvar _c;\n$RefreshReg$(_c, \"SchedulePage\");","map":{"version":3,"names":["React","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","SchedulePage","_s","location","navigation","rows","id","state","console","log","URL","data","get","handleEditTable","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","row","index","timeParts","time","split","hour","parseInt","minute","ampm","formattedHour","toString","padStart","task","goal","onClick","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/SchedulePage/SchedulePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation} from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\n\n\nasync function SchedulePage() {\n  const location = useLocation();\n  const navigation = useNavigate();\n  const {rows, id} = location.state\n  console.log(\"ID IS\" + id);\n  const URL = \"http://localhost:3000\"\n  const data = await axios.get(URL + \"/get-data/\" + id);\n  console.log(data);\n  function handleEditTable(){\n    navigation(\"/edit\",  {\n      state: {\n        rows,\n        id\n      },\n    });\n  }\n  return (\n    <div>\n      <h1>Your Schedule</h1>\n      <table className=\"task-table\">\n        <thead>\n          <tr>\n            <th>Time</th>\n            <th>Task</th>\n            <th>Goal</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, index) => {\n              const timeParts = row.time.split(':');\n              const hour = parseInt(timeParts[0]);\n              const minute = parseInt(timeParts[1]);\n            \n              // Format the time in 12-hour format\n              let ampm = 'am';\n              let formattedHour = hour;\n              \n              if (hour >= 12) {\n                ampm = 'pm';\n                if (hour > 12) {\n                  formattedHour = hour - 12;\n                }\n              }\n            \n              // Handle midnight (00:00)\n              if (hour === 0) {\n                formattedHour = 12;\n              }\n            return (<tr key={index}>\n             <td>{formattedHour}:{minute.toString().padStart(2, '0')} {ampm}</td>\n              <td>{row.task}</td>\n              <td>{row.goal}</td>\n            </tr>)\n})}\n        </tbody>\n      </table>\n      <button onClick={handleEditTable} className=\"editTableButton\"> Edit Table </button> \n    </div>\n  );\n}\n\nexport default SchedulePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}