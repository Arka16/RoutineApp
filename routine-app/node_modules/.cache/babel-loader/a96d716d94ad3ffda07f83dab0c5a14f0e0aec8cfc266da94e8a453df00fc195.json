{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/SchedulePage/SchedulePage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Settings from \"../../components/Settings/Settings\";\nimport axios from \"axios\";\nimport './SchedulePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SchedulePage() {\n  _s();\n  const location = useLocation();\n  const navigation = useNavigate();\n  const [data, setData] = useState([]);\n  const {\n    rows,\n    username\n  } = location.state || {};\n  const URL = \"http://localhost:3000\";\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(URL + \"/tables/\" + username);\n      console.log(response);\n      // console.log(\"TABLE\");\n      //onsole.log(response.data.data.table);\n      setData(response.data.data.table);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  });\n  function handleEditTable() {\n    console.log(\"DATA IN SCHEDUE IS\");\n    console.log(data);\n    navigation(\"/edit\", {\n      state: {\n        data,\n        username\n      }\n    });\n  }\n  async function handleDeleteTable() {\n    const request = await axios.put(URL + \"/tables/del\", {\n      username\n    });\n    if (request.status === 200) {\n      navigation(\"/createTable\", {\n        state: {\n          username\n        }\n      });\n    }\n    console.log(request.status);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Settings, {\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"tableEntry\",\n        children: data.map((row, index) => {\n          const timeParts = row.time.split(':');\n          const hour = parseInt(timeParts[0]);\n          const minute = parseInt(timeParts[1]);\n\n          // Format the time in 12-hour format\n          let ampm = 'am';\n          let formattedHour = hour;\n          if (hour >= 12) {\n            ampm = 'pm';\n            if (hour > 12) {\n              formattedHour = hour - 12;\n            }\n          }\n\n          // Handle midnight (00:00)\n          if (hour === 0) {\n            formattedHour = 12;\n          }\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"tableRowStyle\",\n            onClick: () => navigation(\"/entry\", {\n              state: {\n                task: row.task,\n                goal: row.goal\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [formattedHour, \":\", minute.toString().padStart(2, '0'), \" \", ampm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.goal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditTable,\n      className: \"editTableButton\",\n      children: \" Edit Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeleteTable,\n      className: \"editTableButton\",\n      children: \" Delete and Create New Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(SchedulePage, \"7gCdzZy7t24quMiCEunAfckECL0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SchedulePage;\nexport default SchedulePage;\nvar _c;\n$RefreshReg$(_c, \"SchedulePage\");","map":{"version":3,"names":["React","useLocation","useNavigate","useEffect","useState","Settings","axios","jsxDEV","_jsxDEV","SchedulePage","_s","location","navigation","data","setData","rows","username","state","URL","fetchData","response","get","console","log","table","error","handleEditTable","handleDeleteTable","request","put","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","row","index","timeParts","time","split","hour","parseInt","minute","ampm","formattedHour","onClick","task","goal","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/SchedulePage/SchedulePage.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocation} from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport Settings from \"../../components/Settings/Settings\";\nimport axios from \"axios\";\nimport './SchedulePage.css'\n\nfunction SchedulePage() {\n  const location = useLocation();\n  const navigation = useNavigate();\n  const [data, setData] = useState([])\n  const {rows, username} = location.state || {}\n  const URL = \"http://localhost:3000\"\n  \n  const fetchData = async () => {\n    try{\n      const response = await axios.get(URL + \"/tables/\" + username);\n      console.log(response)\n      // console.log(\"TABLE\");\n      //onsole.log(response.data.data.table);\n      setData(response.data.data.table)\n    }\n    catch(error){\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  } )\n\n\n \n  function handleEditTable(){\n    console.log(\"DATA IN SCHEDUE IS\")\n    console.log(data)\n    navigation(\"/edit\",  {\n      state: {\n        data,\n        username\n      },\n    });\n  }\n\n  async function handleDeleteTable(){\n    const request = await axios.put(URL + \"/tables/del\", {username})\n    if(request.status === 200){\n      navigation(\"/createTable\", {\n        state: {\n          username\n        }\n      });\n    }\n    console.log(request.status)\n    \n  }\n\n\n  return (\n    <div>\n      <Settings username = {username}/>\n      <h1>Your Schedule</h1>\n      <table className=\"task-table\">\n        <thead>\n          <tr>\n            <th>Time</th>\n            <th>Task</th>\n            <th>Goal</th>\n          </tr>\n        </thead>\n        <tbody className=\"tableEntry\" >\n          {data.map((row, index) => {\n              const timeParts = row.time.split(':');\n              const hour = parseInt(timeParts[0]);\n              const minute = parseInt(timeParts[1]);\n            \n              // Format the time in 12-hour format\n              let ampm = 'am';\n              let formattedHour = hour;\n              \n              if (hour >= 12) {\n                ampm = 'pm';\n                if (hour > 12) {\n                  formattedHour = hour - 12;\n                }\n              }\n            \n              // Handle midnight (00:00)\n              if (hour === 0) {\n                formattedHour = 12;\n              }\n            return (<tr key={index} className = \"tableRowStyle\" onClick = {()=> navigation(\"/entry\", {\n              state: {\n                task: row.task,\n                goal: row.goal\n              }\n            })}>\n             <td>{formattedHour}:{minute.toString().padStart(2, '0')} {ampm}</td>\n              <td>{row.task}</td>\n              <td>{row.goal}</td>\n            </tr>)\n})}\n        </tbody>\n      </table>\n      <button onClick={handleEditTable} className=\"editTableButton\"> Edit Table </button> \n      <button onClick={handleDeleteTable} className=\"editTableButton\"> Delete and Create New Table </button> \n    </div>\n  );\n}\n\nexport default SchedulePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}