{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation } from \"react-router-dom\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nimport axios from 'axios';\nimport Settings from \"../../components/Settings/Settings\";\nimport { startsBefore } from '../../helper_functions/helper_functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTable() {\n  _s();\n  const URL = \"http://localhost:3000\";\n  const startingNum = 5;\n  const initialRows = Array(startingNum).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const [createButtonClicked, setCreateButtonClicked] = useState(false);\n  const [dtWarning, setDtWarning] = useState(false);\n  const navigation = useNavigate();\n  const location = useLocation();\n  const [showFilledWarning, setShowFilledWarning] = useState(false);\n  const [showTimeWarning, setShowTimeWarning] = useState(false);\n  const handleDeleteRow = index => {\n    if (rows.length > 1) {\n      const updatedRows = [...rows];\n      updatedRows.splice(index, 1);\n      setRows(updatedRows);\n    } else {\n      setDtWarning(true);\n    }\n  };\n  function closeFilledWarning() {\n    setShowFilledWarning(false);\n  }\n  function closeDeleteWarning() {\n    setDtWarning(false);\n  }\n  function closeTimeWarning() {\n    setShowTimeWarning(false);\n  }\n  async function handleCreateTable() {\n    setCreateButtonClicked(true);\n    var filled = true;\n    var validTime = true;\n    var recentTime = \"\";\n    rows.forEach(item => {\n      if (!item.time || !item.task || !item.goal) {\n        setShowFilledWarning(true);\n        filled = false;\n      }\n      if (item.time && recentTime !== \"\" && !startsBefore(recentTime, item.time)) {\n        setShowTimeWarning(true);\n        validTime = false;\n      }\n      if (item.time) {\n        recentTime = item.time;\n      }\n    });\n    if (filled && validTime) {\n      // Make a POST request to your backend API\n      try {\n        const {\n          id\n        } = location.state;\n        console.log(id);\n        const response = await axios.post(URL + \"/create-table/\" + id, {\n          id,\n          rows\n        });\n        console.log(response.status);\n        console.log('Response from the server:', response.data);\n        navigation(\"/schedule\", {\n          state: {\n            rows: rows,\n            id: id\n          }\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Settings, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Enter your Schedule Below \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n      rows: rows,\n      setRows: setRows,\n      handleDeleteRow: handleDeleteRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateTable,\n      className: \"createTableButton\",\n      children: \" Create Time Table \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Warnings, {\n      showFilledWarning: showFilledWarning,\n      createButtonClicked: createButtonClicked,\n      closeFilledWarning: closeFilledWarning,\n      dtWarning: dtWarning,\n      closeDeleteWarning: closeDeleteWarning,\n      closeTimeWarning: closeTimeWarning,\n      showTimeWarning: showTimeWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n}\n_s(CreateTable, \"ufdaRydB5Zoa5Vv+Yv/KQVAnqms=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = CreateTable;\nexport default CreateTable;\nvar _c;\n$RefreshReg$(_c, \"CreateTable\");","map":{"version":3,"names":["React","useState","TaskTable","useNavigate","useLocation","Warnings","axios","Settings","startsBefore","jsxDEV","_jsxDEV","CreateTable","_s","URL","startingNum","initialRows","Array","fill","time","task","goal","rows","setRows","createButtonClicked","setCreateButtonClicked","dtWarning","setDtWarning","navigation","location","showFilledWarning","setShowFilledWarning","showTimeWarning","setShowTimeWarning","handleDeleteRow","index","length","updatedRows","splice","closeFilledWarning","closeDeleteWarning","closeTimeWarning","handleCreateTable","filled","validTime","recentTime","forEach","item","id","state","console","log","response","post","status","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/pages/CreateTable/CreateTable.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport TaskTable from \"../../components/TaskTable/TaskTable\";\nimport './CreateTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport { useLocation} from \"react-router-dom\";\nimport Warnings from \"../../components/Warnings/Warnings\";\nimport axios from 'axios';\nimport Settings from \"../../components/Settings/Settings\";\nimport {startsBefore} from '../../helper_functions/helper_functions'\n\nfunction CreateTable(){\n    const URL = \"http://localhost:3000\";\n    const startingNum = 5\n    const initialRows = Array(startingNum).fill({ time: '', task: '', goal: '' });\n    const [rows, setRows] = useState(initialRows);\n    const [createButtonClicked, setCreateButtonClicked] = useState(false)\n    const [dtWarning, setDtWarning] = useState(false)\n    const navigation = useNavigate();\n    const location = useLocation();\n    const [showFilledWarning, setShowFilledWarning] = useState(false)\n    const [showTimeWarning, setShowTimeWarning] = useState(false)\n    \n    const handleDeleteRow = (index) => {\n      if (rows.length > 1){\n        const updatedRows = [...rows];\n        updatedRows.splice(index, 1);\n        setRows(updatedRows);\n      }\n      else{\n        setDtWarning(true);\n      }\n      \n    };\n\n    function closeFilledWarning(){\n      setShowFilledWarning(false)\n    }\n\n    function closeDeleteWarning(){\n      setDtWarning(false)\n    }\n\n    function closeTimeWarning(){\n      setShowTimeWarning(false)\n    }\n    async function handleCreateTable(){\n      setCreateButtonClicked(true)\n       var filled = true;\n       var validTime = true;\n       var recentTime = \"\"\n        rows.forEach((item) => {\n          if (!item.time || !item.task || !item.goal){\n            setShowFilledWarning(true)\n            filled = false\n          }\n          if(item.time && (recentTime !== \"\" && !startsBefore(recentTime, item.time))){\n            setShowTimeWarning(true)\n            validTime = false\n          }\n          if(item.time){\n            recentTime = item.time;\n          }\n        })\n        if(filled && validTime){\n          // Make a POST request to your backend API\n          try{\n            const {id} = location.state\n            console.log(id)\n            const response = await axios.post(URL + \"/create-table/\" + id, {id, rows}); \n            console.log(response.status)\n            console.log('Response from the server:', response.data); \n            navigation(\"/schedule\",  {\n              state: {\n                rows: rows,\n                id: id\n              },\n            });\n\n          }\n          catch (error) {\n            console.error('Error:', error);\n          }\n         \n        }\n        \n    }\n    return (\n            <div>\n             <Settings id = {id}/>\n             <h1> Enter your Schedule Below </h1>\n             <TaskTable rows={rows} setRows={setRows} handleDeleteRow = {handleDeleteRow} /> \n            <button onClick={handleCreateTable} className=\"createTableButton\"> Create Time Table </button> \n            <Warnings \n             showFilledWarning = {showFilledWarning}\n             createButtonClicked = {createButtonClicked}\n             closeFilledWarning = {closeFilledWarning}\n             dtWarning = {dtWarning}\n             closeDeleteWarning = {closeDeleteWarning}\n             closeTimeWarning = {closeTimeWarning}\n             showTimeWarning = {showTimeWarning}\n             />\n            </div>\n            );\n}\n\nexport default CreateTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}