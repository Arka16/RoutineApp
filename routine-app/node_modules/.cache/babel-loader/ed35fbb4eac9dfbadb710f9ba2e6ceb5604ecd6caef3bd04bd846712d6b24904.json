{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTable() {\n  _s();\n  const initialRows = Array(5).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value\n    };\n    setRows(updatedRows);\n  };\n  const handleAddRow = () => {\n    setRows([...rows, {\n      time: '',\n      task: '',\n      goal: ''\n    }]);\n  };\n  const handleDeleteRow = index => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-table\",\n      children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task-cell\",\n          type: \"text\",\n          value: row.time,\n          placeholder: \"Time\",\n          onChange: e => handleRowChange(index, 'time', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task-cell\",\n          type: \"text\",\n          value: row.task,\n          placeholder: \"Task\",\n          onChange: e => handleRowChange(index, 'task', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"task-cell\",\n          type: \"text\",\n          value: row.goal,\n          placeholder: \"Goal\",\n          onChange: e => handleRowChange(index, 'goal', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteRow(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"hSh7USprzuvyvELTKO2mfxdyizY=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskTable","_s","initialRows","Array","fill","time","task","goal","rows","setRows","handleRowChange","index","field","value","updatedRows","handleAddRow","handleDeleteRow","splice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","row","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\n\nfunction TaskTable() {\n  const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n\n  const [rows, setRows] = useState(initialRows);\n\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value,\n    };\n    setRows(updatedRows);\n  };\n\n  const handleAddRow = () => {\n    setRows([...rows, { time: '', task: '', goal: '' }]);\n  };\n\n  const handleDeleteRow = (index) => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n\n  return (\n    <div>\n      <h2>Task Grid</h2>\n      <div className=\"task-table\">\n        {rows.map((row, index) => (\n          <div key={index} className=\"task-row\">\n            <input\n              className=\"task-cell\"\n              type=\"text\"\n              value={row.time}\n              placeholder=\"Time\"\n              onChange={(e) => handleRowChange(index, 'time', e.target.value)}\n            />\n            <input\n              className=\"task-cell\"\n              type=\"text\"\n              value={row.task}\n              placeholder=\"Task\"\n              onChange={(e) => handleRowChange(index, 'task', e.target.value)}\n            />\n            <input\n              className=\"task-cell\"\n              type=\"text\"\n              value={row.goal}\n              placeholder=\"Goal\"\n              onChange={(e) => handleRowChange(index, 'goal', e.target.value)}\n            />\n            <button onClick={() => handleDeleteRow(index)}>Delete</button>\n          </div>\n        ))}\n      </div>\n      <button onClick={handleAddRow}>Add Row</button>\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}