{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx\";\nimport React, { Component } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskTable extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRowChange = (index, field, value) => {\n      const {\n        rows\n      } = this.state;\n      const updatedRows = [...rows];\n      updatedRows[index][field] = value;\n      this.setState({\n        rows: updatedRows\n      });\n    };\n    this.handleAddRow = () => {\n      const {\n        rows\n      } = this.state;\n      this.setState({\n        rows: [...rows, {\n          time: '',\n          task: '',\n          goal: ''\n        }]\n      });\n    };\n    this.handleDeleteRow = index => {\n      const {\n        rows\n      } = this.state;\n      const updatedRows = [...rows];\n      updatedRows.splice(index, 1);\n      this.setState({\n        rows: updatedRows\n      });\n    };\n    this.state = {\n      rows: Array(5).fill({\n        time: '',\n        task: '',\n        goal: ''\n      })\n    };\n  }\n  render() {\n    const {\n      rows\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-table\",\n        children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"task-cell\",\n            type: \"text\",\n            value: row.time,\n            placeholder: \"Time\",\n            onChange: e => this.handleRowChange(index, 'time', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"task-cell\",\n            type: \"text\",\n            value: row.task,\n            placeholder: \"Task\",\n            onChange: e => this.handleRowChange(index, 'task', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"task-cell\",\n            type: \"text\",\n            value: row.goal,\n            placeholder: \"Goal\",\n            onChange: e => this.handleRowChange(index, 'goal', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDeleteRow(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TaskTable;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","TaskTable","constructor","props","handleRowChange","index","field","value","rows","state","updatedRows","setState","handleAddRow","time","task","goal","handleDeleteRow","splice","Array","fill","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","row","type","placeholder","onChange","e","target","onClick"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\n\nclass TaskTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: Array(5).fill({ time: '', task: '', goal: '' }),\n    };\n  }\n\n  handleRowChange = (index, field, value) => {\n    const { rows } = this.state;\n    const updatedRows = [...rows];\n    updatedRows[index][field] = value;\n\n    this.setState({\n      rows: updatedRows,\n    });\n  };\n\n  handleAddRow = () => {\n    const { rows } = this.state;\n\n    this.setState({\n      rows: [...rows, { time: '', task: '', goal: '' }],\n    });\n  };\n\n  handleDeleteRow = (index) => {\n    const { rows } = this.state;\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n\n    this.setState({\n      rows: updatedRows,\n    });\n  };\n\n  render() {\n    const { rows } = this.state;\n\n    return (\n      <div>\n        <h2>Task Grid</h2>\n        <div className=\"task-table\">\n          {rows.map((row, index) => (\n            <div key={index} className=\"task-row\">\n              <input\n                className=\"task-cell\"\n                type=\"text\"\n                value={row.time}\n                placeholder=\"Time\"\n                onChange={(e) => this.handleRowChange(index, 'time', e.target.value)}\n              />\n              <input\n                className=\"task-cell\"\n                type=\"text\"\n                value={row.task}\n                placeholder=\"Task\"\n                onChange={(e) => this.handleRowChange(index, 'task', e.target.value)}\n              />\n              <input\n                className=\"task-cell\"\n                type=\"text\"\n                value={row.goal}\n                placeholder=\"Goal\"\n                onChange={(e) => this.handleRowChange(index, 'goal', e.target.value)}\n              />\n              <button onClick={() => this.handleDeleteRow(index)}>Delete</button>\n            </div>\n          ))}\n        </div>\n        <button onClick={this.handleAddRow}>Add Row</button>\n      </div>\n    );\n  }\n}\n\nexport default TaskTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}