{"ast":null,"code":"var _jsxFileName = \"/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport TimePicker from 'react-time-picker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskTable() {\n  _s();\n  const initialRows = Array(5).fill({\n    time: '',\n    task: '',\n    goal: ''\n  });\n  const [rows, setRows] = useState(initialRows);\n  const [hoveredRow, setHoveredRow] = useState(-1);\n  const handleTimeChange = (index, time) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      time: time\n    };\n    setRows(updatedRows);\n  };\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value\n    };\n    setRows(updatedRows);\n  };\n  const handleAddRow = () => {\n    setRows([...rows, {\n      time: '',\n      task: '',\n      goal: ''\n    }]);\n  };\n  const handleDeleteRow = index => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"task-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: rows.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: hoveredRow === index ? 'hovered' : '',\n            onMouseEnter: () => setHoveredRow(index),\n            onMouseLeave: () => setHoveredRow(-1),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                value: row.time,\n                onChange: time => handleTimeChange(index, time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.task,\n                onChange: e => handleRowChange(index, 'task', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: row.goal,\n                onChange: e => handleRowChange(index, 'goal', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: hoveredRow === index && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteRow(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRow,\n      className: \"add-button\",\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskTable, \"EXPNSWVNkO2qM8TN2NV+dXHl0K0=\");\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["React","useState","TimePicker","jsxDEV","_jsxDEV","TaskTable","_s","initialRows","Array","fill","time","task","goal","rows","setRows","hoveredRow","setHoveredRow","handleTimeChange","index","updatedRows","handleRowChange","field","value","handleAddRow","handleDeleteRow","splice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","onMouseEnter","onMouseLeave","onChange","type","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/arkapal/RoutineApp/routine-app/src/components/TaskTable/TaskTable.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskTable.css'; // You can define your CSS for styling\nimport TimePicker from 'react-time-picker';\n\nfunction TaskTable() {\n  const initialRows = Array(5).fill({ time: '', task: '', goal: '' });\n\n  const [rows, setRows] = useState(initialRows);\n  const [hoveredRow, setHoveredRow] = useState(-1);\n\n  const handleTimeChange = (index, time) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      time: time,\n    };\n    setRows(updatedRows);\n  };\n\n  const handleRowChange = (index, field, value) => {\n    const updatedRows = [...rows];\n    updatedRows[index] = {\n      ...updatedRows[index],\n      [field]: value,\n    };\n    setRows(updatedRows);\n  };\n\n  const handleAddRow = () => {\n    setRows([...rows, { time: '', task: '', goal: '' }]);\n  };\n\n  const handleDeleteRow = (index) => {\n    const updatedRows = [...rows];\n    updatedRows.splice(index, 1);\n    setRows(updatedRows);\n  };\n\n  return (\n    <div>\n      <div className=\"table-container\">\n        <table className=\"task-table\">\n          <thead>\n            <tr>\n              <th>Time</th>\n              <th>Task</th>\n              <th>Goal</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((row, index) => (\n              <tr\n                key={index}\n                className={hoveredRow === index ? 'hovered' : ''}\n                onMouseEnter={() => setHoveredRow(index)}\n                onMouseLeave={() => setHoveredRow(-1)}\n              >\n                <td>\n                  <TimePicker\n                    value={row.time}\n                    onChange={(time) => handleTimeChange(index, time)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.task}\n                    onChange={(e) => handleRowChange(index, 'task', e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={row.goal}\n                    onChange={(e) => handleRowChange(index, 'goal', e.target.value)}\n                  />\n                </td>\n                <td>\n                  {hoveredRow === index && (\n                    <button onClick={() => handleDeleteRow(index)}>Delete</button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <button onClick={handleAddRow} className=\"add-button\">\n        Add Row\n      </button>\n    </div>\n  );\n}\n\nexport default TaskTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}